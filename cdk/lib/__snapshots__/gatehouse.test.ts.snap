// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`The Gatehouse stack matches the snapshot 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuDistributionBucketParameter",
      "GuPolicy",
      "GuPolicy",
      "GuStringParameter",
      "GuVpcParameter",
      "GuSubnetListParameter",
      "GuSubnetListParameter",
      "GuPlayApp",
      "GuCertificate",
      "GuInstanceRole",
      "GuSsmSshPolicy",
      "GuDescribeEC2Policy",
      "GuLoggingStreamNameParameter",
      "GuLogShippingPolicy",
      "GuGetDistributablePolicy",
      "GuParameterStoreReadPolicy",
      "GuAmiParameter",
      "GuHttpsEgressSecurityGroup",
      "GuAutoScalingGroup",
      "GuApplicationLoadBalancer",
      "GuApplicationTargetGroup",
      "GuHttpsApplicationListener",
      "GuCname",
      "GuSubnetListParameter",
      "GuStringParameter",
      "GuAlarm",
      "GuRole",
      "GuRole",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": {
    "LoadBalancerGatehouseDnsName": {
      "Description": "DNS entry for LoadBalancerGatehouse",
      "Value": {
        "Fn::GetAtt": [
          "LoadBalancerGatehouse6031E987",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": {
    "AMIGatehouse": {
      "Description": "Amazon Machine Image ID for the app gatehouse. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "PrivateSubnets": {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "VpcId": {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
    "alarmNotificationEmail": {
      "Default": "/TEST/identity/gatehouse/alarmNotificationEmail",
      "Description": "Notification email for gatehouse DB Alarms.",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "gatehousePrivateSubnets": {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "gatehousePublicSubnets": {
      "Default": "/account/vpc/primary/subnets/public",
      "Description": "A list of public subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "rdsSecurityGroupId": {
      "Default": "/TEST/identity/gatehouse/rdsSecurityGroup/id",
      "Description": "ID of database security group.",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AlbSsmParam485C1D52": {
      "Properties": {
        "DataType": "text",
        "Description": "The ARN of the ALB for identity-TEST-gatehouse. N.B. This parameter is created via CDK.",
        "Name": "/infosec/waf/services/TEST/gatehouse-alb-arn",
        "Tags": {
          "Stack": "identity",
          "Stage": "TEST",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/gatehouse",
        },
        "Tier": "Standard",
        "Type": "String",
        "Value": {
          "Ref": "LoadBalancerGatehouse6031E987",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AutoScalingGroupGatehouseASG9482EAEF": {
      "Properties": {
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchTemplate": {
          "LaunchTemplateId": {
            "Ref": "identityTESTgatehouseBDA14DB7",
          },
          "Version": {
            "Fn::GetAtt": [
              "identityTESTgatehouseBDA14DB7",
              "LatestVersionNumber",
            ],
          },
        },
        "MaxSize": "2",
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
          },
        ],
        "MinSize": "0",
        "Tags": [
          {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "gatehouse",
          },
          {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "LogKinesisStreamName",
            "PropagateAtLaunch": true,
            "Value": {
              "Ref": "LoggingStreamName",
            },
          },
          {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "SystemdUnit",
            "PropagateAtLaunch": true,
            "Value": "gatehouse.service",
          },
        ],
        "TargetGroupARNs": [
          {
            "Ref": "TargetGroupGatehouseEB93E2A5",
          },
        ],
        "VPCZoneIdentifier": {
          "Ref": "gatehousePrivateSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "CertificateGatehouse0CF1A666": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "DomainName": "id.test.dev-guardianapis.com",
        "Tags": [
          {
            "Key": "App",
            "Value": "gatehouse",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Name",
            "Value": "gatehouse-TEST/CertificateGatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "ClientSecurityGroupOutputParameter16694915": {
      "Properties": {
        "Name": "/TEST/identity/gatehouse/db-clients-security-group",
        "Tags": {
          "Stack": "identity",
          "Stage": "TEST",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/gatehouse",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "RDSSecurityGroupClientsE0F4CB29",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DMSGatehouseTargetEndpoint": {
      "Properties": {
        "DatabaseName": "gatehouse",
        "EndpointType": "target",
        "EngineName": "postgres",
        "PostgreSqlSettings": {
          "SecretsManagerAccessRoleArn": {
            "Fn::GetAtt": [
              "DMSTargetIamRole66589FB2",
              "Arn",
            ],
          },
          "SecretsManagerSecretId": {
            "Ref": "DMSTargetCredentials69E635CE",
          },
        },
        "SslMode": "require",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::DMS::Endpoint",
    },
    "DMSIdentitySourceEndpoint": {
      "Properties": {
        "DatabaseName": "identitydb",
        "EndpointType": "source",
        "EngineName": "postgres",
        "PostgreSqlSettings": {
          "SecretsManagerAccessRoleArn": {
            "Fn::GetAtt": [
              "DMSSourceIamRole0E67A5F6",
              "Arn",
            ],
          },
          "SecretsManagerSecretId": {
            "Ref": "DMSSourceCredentials751FB3FA",
          },
        },
        "SslMode": "require",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::DMS::Endpoint",
    },
    "DMSReplicationConfig": {
      "Properties": {
        "ComputeConfig": {
          "MaxCapacityUnits": 16,
          "MinCapacityUnits": 1,
          "ReplicationSubnetGroupId": {
            "Ref": "DMSReplicationSubnetGroup",
          },
          "VpcSecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "RDSSecurityGroupClientsE0F4CB29",
                "GroupId",
              ],
            },
            {
              "Ref": "rdsSecurityGroupId",
            },
          ],
        },
        "ReplicationConfigIdentifier": "gatehouse-TEST",
        "ReplicationSettings": {
          "Logging": {
            "EnableLogging": true,
          },
        },
        "ReplicationType": "full-load",
        "SourceEndpointArn": {
          "Ref": "DMSIdentitySourceEndpoint",
        },
        "TableMappings": {
          "rules": [
            {
              "filters": [],
              "object-locator": {
                "schema-name": "public",
                "table-name": "clients",
              },
              "rule-action": "include",
              "rule-id": "1",
              "rule-name": "1",
              "rule-type": "selection",
            },
            {
              "filters": [],
              "object-locator": {
                "schema-name": "public",
                "table-name": "clientaccesstokens",
              },
              "rule-action": "include",
              "rule-id": "2",
              "rule-name": "2",
              "rule-type": "selection",
            },
            {
              "object-locator": {
                "schema-name": "public",
                "table-name": "clients",
              },
              "rule-action": "add-prefix",
              "rule-id": "3",
              "rule-name": "3",
              "rule-target": "table",
              "rule-type": "transformation",
              "value": "identity_",
            },
            {
              "object-locator": {
                "schema-name": "public",
                "table-name": "clientaccesstokens",
              },
              "rule-action": "add-prefix",
              "rule-id": "4",
              "rule-name": "4",
              "rule-target": "table",
              "rule-type": "transformation",
              "value": "identity_",
            },
          ],
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TargetEndpointArn": {
          "Ref": "DMSGatehouseTargetEndpoint",
        },
      },
      "Type": "AWS::DMS::ReplicationConfig",
    },
    "DMSReplicationSubnetGroup": {
      "Properties": {
        "ReplicationSubnetGroupDescription": "DMS Replication Subnet Group",
        "SubnetIds": [
          {
            "Fn::Select": [
              0,
              {
                "Ref": "PrivateSubnets",
              },
            ],
          },
          {
            "Fn::Select": [
              1,
              {
                "Ref": "PrivateSubnets",
              },
            ],
          },
          {
            "Fn::Select": [
              2,
              {
                "Ref": "PrivateSubnets",
              },
            ],
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::DMS::ReplicationSubnetGroup",
    },
    "DMSSourceCredentials751FB3FA": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "DMSSourceIamRole0E67A5F6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "dms.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "dms.eu-west-1.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "dms-data-migrations.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:GetSecretValue",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Ref": "DMSSourceCredentials751FB3FA",
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "retrieveCredentials",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DMSTargetCredentials69E635CE": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "DMSTargetIamRole66589FB2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "dms.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "dms.eu-west-1.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "dms-data-migrations.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:GetSecretValue",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Ref": "DMSTargetCredentials69E635CE",
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "retrieveCredentials",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatabaseClusterIdentifierOutputParameterC8ADF3BB": {
      "Properties": {
        "Name": "/TEST/identity/gatehouse/db-identifier",
        "Tags": {
          "Stack": "identity",
          "Stage": "TEST",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/gatehouse",
        },
        "Type": "String",
        "Value": {
          "Ref": "GatehouseDbFE0B3FEE",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DatabaseClusterResourceIdentifierOutputParameterB1B033B2": {
      "Properties": {
        "Name": "/TEST/identity/gatehouse/db-resource-identifier",
        "Tags": {
          "Stack": "identity",
          "Stage": "TEST",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/gatehouse",
        },
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "GatehouseDbFE0B3FEE",
            "DBClusterResourceId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DescribeEC2PolicyFF5F9295": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleGatehouse075DE24E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EC2AppDNS": {
      "Properties": {
        "Name": "id.test.dev-guardianapis.com",
        "RecordType": "CNAME",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "LoadBalancerGatehouse6031E987",
              "DNSName",
            ],
          },
        ],
        "Stage": "TEST",
        "TTL": 3600,
      },
      "Type": "Guardian::DNS::RecordSet",
    },
    "GatehouseDbFE0B3FEE": {
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "AutoMinorVersionUpgrade": true,
        "BackupRetentionPeriod": 14,
        "CopyTagsToSnapshot": true,
        "DBClusterParameterGroupName": {
          "Ref": "GatehouseDbParameterGroupAD12D077",
        },
        "DBSubnetGroupName": {
          "Ref": "GatehouseDbSubnetsD1F185BF",
        },
        "DatabaseName": "gatehouse",
        "DeletionProtection": true,
        "EnableHttpEndpoint": true,
        "EnableIAMDatabaseAuthentication": true,
        "Engine": "aurora-postgresql",
        "EngineVersion": "16.6",
        "ManageMasterUserPassword": true,
        "MasterUsername": "postgres",
        "MonitoringInterval": 60,
        "MonitoringRoleArn": {
          "Fn::GetAtt": [
            "GatehouseDbMonitoringRole2A95BC4D",
            "Arn",
          ],
        },
        "PerformanceInsightsEnabled": true,
        "PerformanceInsightsRetentionPeriod": 7,
        "Port": 5432,
        "PreferredMaintenanceWindow": "Wed:04:30-Wed:05:00",
        "ServerlessV2ScalingConfiguration": {
          "MaxCapacity": 1,
          "MinCapacity": 0,
        },
        "StorageEncrypted": true,
        "Tags": [
          {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "RDSSecurityGroupRules40FD365B",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "GatehouseDbMonitoringRole2A95BC4D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "monitoring.rds.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GatehouseDbParameterGroupAD12D077": {
      "Properties": {
        "Description": "Cluster parameter group for aurora-postgresql16",
        "Family": "aurora-postgresql16",
        "Parameters": {
          "rds.force_ssl": "1",
        },
        "Tags": [
          {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::RDS::DBClusterParameterGroup",
    },
    "GatehouseDbSubnetsD1F185BF": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnets for GatehouseDb database",
        "SubnetIds": [
          {
            "Fn::Select": [
              0,
              {
                "Ref": "PrivateSubnets",
              },
            ],
          },
          {
            "Fn::Select": [
              1,
              {
                "Ref": "PrivateSubnets",
              },
            ],
          },
          {
            "Fn::Select": [
              2,
              {
                "Ref": "PrivateSubnets",
              },
            ],
          },
        ],
        "Tags": [
          {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "GatehouseDbreader63FF6C0B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "GatehouseDbwriter4093A800",
      ],
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "GatehouseDbFE0B3FEE",
        },
        "DBInstanceClass": "db.serverless",
        "Engine": "aurora-postgresql",
        "PromotionTier": 1,
        "PubliclyAccessible": false,
        "Tags": [
          {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "GatehouseDbwriter4093A800": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DBClusterIdentifier": {
          "Ref": "GatehouseDbFE0B3FEE",
        },
        "DBInstanceClass": "db.serverless",
        "Engine": "aurora-postgresql",
        "PromotionTier": 0,
        "PubliclyAccessible": false,
        "Tags": [
          {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "GetDistributablePolicyGatehouse34FFC5AF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "DistributionBucketName",
                    },
                    "/identity/TEST/gatehouse/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyGatehouse34FFC5AF",
        "Roles": [
          {
            "Ref": "InstanceRoleGatehouse075DE24E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupGatehouseD78E25BB": {
      "Properties": {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "gatehouse",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupGatehousefromgatehouseTESTLoadBalancerGatehouseSecurityGroup226CEBB690008C0B659F": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupGatehouseD78E25BB",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LoadBalancerGatehouseSecurityGroupDD25BC00",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuLogShippingPolicy981BFE5A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": [
          {
            "Ref": "InstanceRoleGatehouse075DE24E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "HighUsageAlarm983B2726": {
      "Properties": {
        "ActionsEnabled": false,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":",
                {
                  "Fn::GetAtt": [
                    "NotificationTopicEB7A0DF1",
                    "TopicName",
                  ],
                },
              ],
            ],
          },
        ],
        "AlarmDescription": "Gatehouse usage is above 80%",
        "AlarmName": "High usage in Gatehouse database",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "DBClusterIdentifier",
            "Value": {
              "Ref": "GatehouseDbFE0B3FEE",
            },
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "ACUUtilization",
        "Namespace": "AWS/RDS",
        "Period": 60,
        "Statistic": "Average",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Threshold": 80,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "InstanceRoleGatehouse075DE24E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Tags": [
          {
            "Key": "App",
            "Value": "gatehouse",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ListenerGatehouseDDE3C56A": {
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": {
              "Ref": "CertificateGatehouse0CF1A666",
            },
          },
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "TargetGroupGatehouseEB93E2A5",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "LoadBalancerGatehouse6031E987",
        },
        "Port": 443,
        "Protocol": "HTTPS",
        "SslPolicy": "ELBSecurityPolicy-TLS13-1-2-2021-06",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerGatehouse6031E987": {
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
          {
            "Key": "routing.http.x_amzn_tls_version_and_cipher_suite.enabled",
            "Value": "true",
          },
          {
            "Key": "routing.http.drop_invalid_header_fields.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LoadBalancerGatehouseSecurityGroupDD25BC00",
              "GroupId",
            ],
          },
        ],
        "Subnets": {
          "Ref": "gatehousePublicSubnets",
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "gatehouse",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerGatehouseSecurityGroupDD25BC00": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB gatehouseTESTLoadBalancerGatehouseC8325917",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "gatehouse",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerGatehouseSecurityGrouptogatehouseTESTGuHttpsEgressSecurityGroupGatehouse8627040E90000595EFE2": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupGatehouseD78E25BB",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerGatehouseSecurityGroupDD25BC00",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "LoadBalancerGatehouseSecurityGrouptogatehouseTESTrdsSecurityGroup6652430490005CC1E089": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Ref": "rdsSecurityGroupId",
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerGatehouseSecurityGroupDD25BC00",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "NotificationTopicEB7A0DF1": {
      "Properties": {
        "DisplayName": "Gatehouse notifications",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SNS::Topic",
    },
    "NotificationTopicTokenSubscription180FA58AD": {
      "Properties": {
        "Endpoint": {
          "Ref": "alarmNotificationEmail",
        },
        "Protocol": "email",
        "TopicArn": {
          "Ref": "NotificationTopicEB7A0DF1",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "ParameterStoreReadGatehouseF4274D8F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/identity/gatehouse",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/identity/gatehouse/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleGatehouse075DE24E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RDSSecurityGroupClientsE0F4CB29": {
      "Properties": {
        "GroupDescription": "Allow access to Gatehouse DB from Clients",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RDSSecurityGroupRules40FD365B": {
      "Properties": {
        "GroupDescription": "gatehouse-TEST/RDSSecurityGroupRules",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RDSSecurityGroupRulesfromgatehouseTESTRDSSecurityGroupClientsEA96E72954327FBC3317": {
      "Properties": {
        "Description": "from gatehouseTESTRDSSecurityGroupClientsEA96E729:5432",
        "FromPort": 5432,
        "GroupId": {
          "Fn::GetAtt": [
            "RDSSecurityGroupRules40FD365B",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "RDSSecurityGroupClientsE0F4CB29",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "ReadAppSsmParamsPolicy9DC17627": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/identity/gatehouse/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ReadAppSsmParamsPolicy9DC17627",
        "Roles": [
          {
            "Ref": "InstanceRoleGatehouse075DE24E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SsmSshPolicy4CFC977E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply",
                "ssm:UpdateInstanceInformation",
                "ssm:ListInstanceAssociations",
                "ssm:DescribeInstanceProperties",
                "ssm:DescribeDocumentParameters",
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ssm-ssh-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleGatehouse075DE24E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TargetGroupGatehouseEB93E2A5": {
      "Properties": {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 9000,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "App",
            "Value": "gatehouse",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gatehouse",
          },
          {
            "Key": "Stack",
            "Value": "identity",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "XrayTelemetryPolicy20B2C572": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:DescribeLogGroups",
                "logs:PutRetentionPolicy",
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
                "xray:GetSamplingStatisticSummaries",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "XrayTelemetryPolicy20B2C572",
        "Roles": [
          {
            "Ref": "InstanceRoleGatehouse075DE24E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "identityTESTgatehouseBDA14DB7": {
      "DependsOn": [
        "InstanceRoleGatehouse075DE24E",
      ],
      "Properties": {
        "LaunchTemplateData": {
          "IamInstanceProfile": {
            "Arn": {
              "Fn::GetAtt": [
                "identityTESTgatehouseProfileBF43149C",
                "Arn",
              ],
            },
          },
          "ImageId": {
            "Ref": "AMIGatehouse",
          },
          "InstanceType": "t4g.micro",
          "MetadataOptions": {
            "HttpTokens": "required",
            "InstanceMetadataTags": "enabled",
          },
          "Monitoring": {
            "Enabled": false,
          },
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "GuHttpsEgressSecurityGroupGatehouseD78E25BB",
                "GroupId",
              ],
            },
            {
              "Ref": "rdsSecurityGroupId",
            },
          ],
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "App",
                  "Value": "gatehouse",
                },
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/gatehouse",
                },
                {
                  "Key": "Name",
                  "Value": "gatehouse-TEST/identity-TEST-gatehouse",
                },
                {
                  "Key": "Stack",
                  "Value": "identity",
                },
                {
                  "Key": "Stage",
                  "Value": "TEST",
                },
              ],
            },
            {
              "ResourceType": "volume",
              "Tags": [
                {
                  "Key": "App",
                  "Value": "gatehouse",
                },
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/gatehouse",
                },
                {
                  "Key": "Name",
                  "Value": "gatehouse-TEST/identity-TEST-gatehouse",
                },
                {
                  "Key": "Stack",
                  "Value": "identity",
                },
                {
                  "Key": "Stage",
                  "Value": "TEST",
                },
              ],
            },
          ],
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "#!/bin/bash -ev
# Install X-Ray Collector
wget -P /tmp https://aws-otel-collector.s3.amazonaws.com/ubuntu/arm64/latest/aws-otel-collector.deb
dpkg -i /tmp/aws-otel-collector.deb
cat << EOF > /opt/aws/aws-otel-collector/etc/config.yaml
# Prepares collector to receive OTLP traces
# See https://github.com/open-telemetry/opentelemetry-collector/tree/main/receiver/otlpreceiver#otlp-receiver
receivers:
  otlp:
    protocols:
      grpc:
processors:
  # Collects EC2 metadata.  In particular, we need the Stage tag to distinguish between prod and non-prod environments
  # See https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/resourcedetectionprocessor#resource-detection-processor
  resourcedetection/ec2:
    detectors:
      - ec2
    ec2:
      tags:
        - Stage
    timeout: 2s
    override: false
  # Keeps the collector from using more than 20 MiB of memory
  # See https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor/memorylimiterprocessor#memory-limiter-processor
  memory_limiter:
    check_interval: 1s
    limit_mib: 20
  # Sends batches of up to 50 traces every second
  # https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor/batchprocessor#batch-processor
  batch/traces:
    timeout: 1s
    send_batch_size: 50
# Exports traces to AWS X-Ray, allowing Stage to be indexed for filtering
# https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/awsxrayexporter
exporters:
  awsxray:
    indexed_attributes:
      - otel.resource.ec2.tag.Stage
# Allows access to AWS APIs
# https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/awsproxy
extensions:
  awsproxy:
# Wires all the resources defined above together
service:
  extensions:
    - awsproxy
  pipelines:
    traces:
      receivers:
        - otlp
      processors:
        - resourcedetection/ec2
        - memory_limiter
        - batch/traces
      exporters:
        - awsxray
EOF
sudo /opt/aws/aws-otel-collector/bin/aws-otel-collector-ctl -a start
# Install X-Ray Agent
sudo mkdir /opt/aws-opentelemetry-agent
chmod +rx /opt/aws-opentelemetry-agent
wget -P /opt/aws-opentelemetry-agent https://github.com/aws-observability/aws-otel-java-instrumentation/releases/latest/download/aws-opentelemetry-agent.jar
# Install app
aws --region undefined s3 cp s3://",
                  {
                    "Ref": "DistributionBucketName",
                  },
                  "/identity/TEST/gatehouse/gatehouse.deb /tmp/gatehouse.deb
dpkg -i /tmp/gatehouse.deb",
                ],
              ],
            },
          },
        },
        "TagSpecifications": [
          {
            "ResourceType": "launch-template",
            "Tags": [
              {
                "Key": "App",
                "Value": "gatehouse",
              },
              {
                "Key": "gu:cdk:version",
                "Value": "TEST",
              },
              {
                "Key": "gu:repo",
                "Value": "guardian/gatehouse",
              },
              {
                "Key": "Name",
                "Value": "gatehouse-TEST/identity-TEST-gatehouse",
              },
              {
                "Key": "Stack",
                "Value": "identity",
              },
              {
                "Key": "Stage",
                "Value": "TEST",
              },
            ],
          },
        ],
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "identityTESTgatehouseProfileBF43149C": {
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceRoleGatehouse075DE24E",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
  },
}
`;
